{
    "pipes": [],
    "interfaces": [
        {
            "name": "AppState",
            "id": "interface-AppState-4e092db6ecb3de3349f6adb0bc30b98a9cecf584cf26e0215f673c969ca6d84e3431e4c3db16cbc7e0e5fde9f1a6b40833e2212395a20c9419eb21b36b57b16d",
            "file": "src/core/features/club/presentation/store/selectors.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {ClubState} from \"./reducer\";\r\nimport {createSelector} from \"@ngrx/store\";\r\n\r\nexport interface AppState {\r\n  club: ClubState\r\n}\r\n\r\nexport const selectFeature = (state: AppState) => state.club;\r\n\r\nexport const getClubList = createSelector(\r\n  selectFeature,\r\n  (state: ClubState) => state.clubs\r\n)\r\n",
            "properties": [
                {
                    "name": "club",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ClubState",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "ClubEntity",
            "id": "interface-ClubEntity-5847eeeb3f84a7b35cd61d4bed4b88bf7b500c206a1fc7e36860edd94935e03e740400306eeec41951202eee6fc18c7276e37e127433a1fe7baa6b7c198fbf71",
            "file": "src/core/features/club/data/repositories/club.entity.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ClubEntity {\r\n  id: string;\r\n  name: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "ClubModel",
            "id": "interface-ClubModel-a702cecd79ade331286ba8ab3b0cbd4aa38e03991ce2044b552efeaf7533221d382b6ae0fd18cc4885a0f8ab971b0108183f4efc82f55e6a370301ef4208ab67",
            "file": "src/core/features/club/domain/models/club.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ClubModel {\r\n  id: string;\r\n  name: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "ClubState",
            "id": "interface-ClubState-a6fbc071e0a9d393e5a1cc562809c9f33a518300d4bf5f9fd6dc7e65800ded463a719a3f6c64f9bfb5932f28aa7ac1434c0028f79d7b4d67fe20c98844a7d9ee",
            "file": "src/core/features/club/presentation/store/reducer.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {ClubModel} from \"../../domain/models/club.model\";\r\nimport {createFeature, createReducer, on} from \"@ngrx/store\";\r\nimport * as fromActions from './actions';\r\n\r\n\r\nexport interface ClubState {\r\n  clubs: ClubModel[];\r\n  isLoading: boolean;\r\n  isLoaded: boolean;\r\n  errors: any\r\n}\r\n\r\nconst initialClubState: ClubState = {\r\n  clubs: [],\r\n  isLoading: false,\r\n  isLoaded: false,\r\n  errors: null,\r\n}\r\n\r\nexport const clubFeature = createReducer(\r\n  initialClubState,\r\n  on(\r\n    fromActions.fetchClubs,\r\n    (state) => ({ ...state, isLoading: true, isLoaded: false })\r\n  ),\r\n  on(\r\n    fromActions.fetchClubsSuccess,\r\n    (state, { clubs }) => ({ ...state, clubs, isLoading: false, isLoaded: true })\r\n  ),\r\n  on(\r\n    fromActions.fetchClubsFailed,\r\n    (state, { errors }) => ({ ...state, errors, isLoading: false, isLoaded: false })\r\n  ),\r\n)\r\n",
            "properties": [
                {
                    "name": "clubs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ClubModel[]",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "errors",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "isLoaded",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "isLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "UseCase",
            "id": "interface-UseCase-3932f33415909232143cfc5cf0f2c1478762e4a170f01f4d7b61d0e2749a1fc9214f44854b38e8c9beb57200f00d898c870c335e01023fd5c6cf430c02590c51",
            "file": "src/core/utils/use-case.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Observable } from 'rxjs';\r\n\r\nexport interface UseCase<S, T> {\r\n  execute(params: S): Observable<T>;\r\n}\r\n",
            "properties": [],
            "indexSignatures": [],
            "kind": 170,
            "methods": [
                {
                    "name": "execute",
                    "args": [
                        {
                            "name": "params",
                            "type": "S",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 4,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "params",
                            "type": "S",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        }
    ],
    "injectables": [
        {
            "name": "ClubEffects",
            "id": "injectable-ClubEffects-f98a04473e4f0af876135afb817d1c1d58a9f0c17b46ce1e90a4583f9b66cedafd759242320b6cf587f69866660a9b613b7ac7e000be8e64dc384f33f357a5f4",
            "file": "src/core/features/club/presentation/store/effects.ts",
            "properties": [
                {
                    "name": "fetchClubs$",
                    "defaultValue": "createEffect(() => this.actions$.pipe(\r\n      ofType(fromActions.fetchClubs),\r\n      exhaustMap(() => this.getAllClubsUseCase.execute()\r\n        .pipe(\r\n          map((clubs: ClubModel[]) => (fromActions.fetchClubsSuccess({ clubs: clubs }))),\r\n          catchError(errors => of(fromActions.fetchClubsFailed({ errors }))\r\n        ))\r\n    )\r\n  ))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {Injectable} from \"@angular/core\";\r\nimport {Actions, createEffect, ofType} from \"@ngrx/effects\";\r\nimport * as fromActions from './actions';\r\nimport {catchError, exhaustMap, map, of} from \"rxjs\";\r\nimport {GetAllClubsUseCase} from \"../../domain/usecases/get-all-clubs.usecase\";\r\nimport {ClubModel} from \"../../domain/models/club.model\";\r\n\r\n@Injectable()\r\nexport class ClubEffects {\r\n\r\n  fetchClubs$ = createEffect(() => this.actions$.pipe(\r\n      ofType(fromActions.fetchClubs),\r\n      exhaustMap(() => this.getAllClubsUseCase.execute()\r\n        .pipe(\r\n          map((clubs: ClubModel[]) => (fromActions.fetchClubsSuccess({ clubs: clubs }))),\r\n          catchError(errors => of(fromActions.fetchClubsFailed({ errors }))\r\n        ))\r\n    )\r\n  ));\r\n\r\n  constructor(\r\n    private actions$: Actions,\r\n    private getAllClubsUseCase: GetAllClubsUseCase\r\n  ) {}\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "getAllClubsUseCase",
                        "type": "GetAllClubsUseCase",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "getAllClubsUseCase",
                        "type": "GetAllClubsUseCase",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ClubInMemoryImplRepository",
            "id": "injectable-ClubInMemoryImplRepository-b8366989458612bcd17a4af1a06c9ac563bb7b08b73b0e365ce98da31d8f1dcb33495e0875c1866a11ffd123ddb4d1b697373b016304339ad502add06d797c32",
            "file": "src/core/features/club/data/repositories/club-in-memory-impl.repository.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getAllClubs",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<ClubModel[]>",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ClubRepository"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { ClubRepository } from '../../domain/repositories/club.repository';\nimport { Injectable } from '@angular/core';\nimport { ClubModel } from '../../domain/models/club.model';\nimport { Observable, of } from 'rxjs';\nimport { CLUBS_MOCK } from '../mocks/CLUBS_MOCK';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ClubInMemoryImplRepository extends ClubRepository {\n  getAllClubs(): Observable<ClubModel[]> {\n    return of(CLUBS_MOCK);\n  }\n}\n",
            "extends": "ClubRepository",
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "ClubRepository",
            "id": "class-ClubRepository-77a9b7fc10e872e12a62edaac2177c93bbab41f6b4388857a52a0831027d7ab57a9d66cb42c3c9f625abe44be344ff21ab5779cf8f2317d6e0269f4509ef7d7f",
            "file": "src/core/features/club/domain/repositories/club.repository.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import {Observable} from \"rxjs\";\r\nimport {ClubModel} from \"../models/club.model\";\r\n\r\nexport abstract class ClubRepository {\r\n  abstract getAllClubs(): Observable<ClubModel[]>;\r\n}\r\n",
            "properties": [],
            "methods": [
                {
                    "name": "getAllClubs",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<ClubModel[]>",
                    "typeParameters": [],
                    "line": 5,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        126
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "GetAllClubsUseCase",
            "id": "class-GetAllClubsUseCase-f8df12bb515d24de3f982963adacbdc63182460fab525c350ec424ee3fca4075fc7253bab86234e4bebe28ae377ef161cf321fac290ad635231289081918de56",
            "file": "src/core/features/club/domain/usecases/get-all-clubs.usecase.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import {UseCase} from \"../../../../utils/use-case\";\r\nimport {ClubModel} from \"../models/club.model\";\r\nimport {ClubRepository} from \"../repositories/club.repository\";\r\nimport {Observable, of} from \"rxjs\";\r\n\r\nexport class GetAllClubsUseCase implements UseCase<void, ClubModel[]> {\r\n  constructor(private clubRepository: ClubRepository) { }\r\n\r\n  execute(): Observable<ClubModel[]> {\r\n    return this.clubRepository.getAllClubs();\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "clubRepository",
                        "type": "ClubRepository",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "clubRepository",
                        "type": "ClubRepository",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [],
            "methods": [
                {
                    "name": "execute",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<ClubModel[]>",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "UseCase"
            ]
        },
        {
            "name": "Mapper",
            "id": "class-Mapper-95baca44c1bcb7747dbeb6037f336e35fb006fe0505a361a60317a06fe89d9574d1fd7a4e21c9725ce16691b9440b63b55243c1f3aa63f94ca7cf59c92c75b21",
            "file": "src/core/utils/mapper.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export abstract class Mapper<I, O> {\r\n  abstract mapFrom(param: I): O;\r\n  abstract mapTo(param: O): I;\r\n}\r\n",
            "properties": [],
            "methods": [
                {
                    "name": "mapFrom",
                    "args": [
                        {
                            "name": "param",
                            "type": "I",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "O",
                    "typeParameters": [],
                    "line": 2,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        126
                    ],
                    "jsdoctags": [
                        {
                            "name": "param",
                            "type": "I",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mapTo",
                    "args": [
                        {
                            "name": "param",
                            "type": "O",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "I",
                    "typeParameters": [],
                    "line": 3,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        126
                    ],
                    "jsdoctags": [
                        {
                            "name": "param",
                            "type": "O",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [
        {
            "name": "InputDirective",
            "id": "directive-InputDirective-fa613a97c3a4d5606af1a7308ea295c7547bfe478253519a877f96957ad9a8086cd62345d54017b4fd5249367ff15363b3ff0a891b3fa46c51a5c01ae3192658",
            "file": "src/ui/components/input/input.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, HostBinding, Input } from '@angular/core';\nimport { UiComponentSize } from '../types/component-size.type';\nimport { Subject } from 'rxjs';\nimport { UiComponentStatus } from '../types/component-status.type';\n\n@Directive({\n  selector: 'input[UiInput], textarea[UiInput]',\n})\nexport class InputDirective {\n  protected destroy$ = new Subject<void>();\n\n  @Input() fieldSize: UiComponentSize = 'medium';\n  @Input() status: UiComponentStatus = 'basic';\n\n  constructor() {}\n\n  // SIZE\n  @HostBinding('class.size-tiny')\n  get tiny() {\n    return this.fieldSize === 'tiny';\n  }\n\n  @HostBinding('class.size-small')\n  get small() {\n    return this.fieldSize === 'small';\n  }\n\n  @HostBinding('class.size-medium')\n  get medium() {\n    return this.fieldSize === 'medium';\n  }\n\n  @HostBinding('class.size-large')\n  get large() {\n    return this.fieldSize === 'large';\n  }\n\n  @HostBinding('class.size-giant')\n  get giant() {\n    return this.fieldSize === 'giant';\n  }\n\n  // STATUS\n  @HostBinding('class.status-primary')\n  get primary() {\n    return this.status === 'primary';\n  }\n\n  @HostBinding('class.status-info')\n  get info() {\n    return this.status === 'info';\n  }\n\n  @HostBinding('class.status-success')\n  get success() {\n    return this.status === 'success';\n  }\n\n  @HostBinding('class.status-warning')\n  get warning() {\n    return this.status === 'warning';\n  }\n\n  @HostBinding('class.status-danger')\n  get danger() {\n    return this.status === 'danger';\n  }\n\n  @HostBinding('class.status-basic')\n  get basic() {\n    return this.status === 'basic';\n  }\n\n  @HostBinding('class.status-control')\n  get control() {\n    return this.status === 'control';\n  }\n}\n",
            "selector": "input[UiInput], textarea[UiInput]",
            "providers": [],
            "hostDirectives": [],
            "standalone": false,
            "inputsClass": [
                {
                    "name": "fieldSize",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "UiComponentSize",
                    "decorators": []
                },
                {
                    "name": "status",
                    "defaultValue": "'basic'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "UiComponentStatus",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class.size-giant",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "class.size-large",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "class.size-medium",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "class.size-small",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "class.size-tiny",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "class.status-basic",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 70,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "class.status-control",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 75,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "class.status-danger",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "class.status-info",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "class.status-primary",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "class.status-success",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 55,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "class.status-warning",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 60,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "destroy$",
                    "defaultValue": "new Subject<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "accessors": {
                "tiny": {
                    "name": "tiny",
                    "getSignature": {
                        "name": "tiny",
                        "type": "",
                        "returnType": "",
                        "line": 19
                    }
                },
                "small": {
                    "name": "small",
                    "getSignature": {
                        "name": "small",
                        "type": "",
                        "returnType": "",
                        "line": 24
                    }
                },
                "medium": {
                    "name": "medium",
                    "getSignature": {
                        "name": "medium",
                        "type": "",
                        "returnType": "",
                        "line": 29
                    }
                },
                "large": {
                    "name": "large",
                    "getSignature": {
                        "name": "large",
                        "type": "",
                        "returnType": "",
                        "line": 34
                    }
                },
                "giant": {
                    "name": "giant",
                    "getSignature": {
                        "name": "giant",
                        "type": "",
                        "returnType": "",
                        "line": 39
                    }
                },
                "primary": {
                    "name": "primary",
                    "getSignature": {
                        "name": "primary",
                        "type": "",
                        "returnType": "",
                        "line": 45
                    }
                },
                "info": {
                    "name": "info",
                    "getSignature": {
                        "name": "info",
                        "type": "",
                        "returnType": "",
                        "line": 50
                    }
                },
                "success": {
                    "name": "success",
                    "getSignature": {
                        "name": "success",
                        "type": "",
                        "returnType": "",
                        "line": 55
                    }
                },
                "warning": {
                    "name": "warning",
                    "getSignature": {
                        "name": "warning",
                        "type": "",
                        "returnType": "",
                        "line": 60
                    }
                },
                "danger": {
                    "name": "danger",
                    "getSignature": {
                        "name": "danger",
                        "type": "",
                        "returnType": "",
                        "line": 65
                    }
                },
                "basic": {
                    "name": "basic",
                    "getSignature": {
                        "name": "basic",
                        "type": "",
                        "returnType": "",
                        "line": 70
                    }
                },
                "control": {
                    "name": "control",
                    "getSignature": {
                        "name": "control",
                        "type": "",
                        "returnType": "",
                        "line": 75
                    }
                }
            }
        }
    ],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-2b8b8ff48831707f219af6a2c21647066bef25a7ace414473cf314f3d9e72e2613aeada9f191eb57ba3e65a9445c2b674bc599fbe79298216037246c9d3c402c",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mtun-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "avatar",
                    "defaultValue": "faker.image.avatar()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { faker } from '@faker-js/faker';\r\nimport { initFlowbite } from 'flowbite';\r\n\r\n@Component({\r\n  selector: 'mtun-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  avatar = faker.image.avatar();\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    initFlowbite();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n\r\n}\r\n",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"bg-slate-50 flex h-full flex-col\">\r\n  <mtun-header logo=\"https://fakeimg.pl/250x100/\">\r\n    <mtun-avatar [img]=\"avatar\" alt=\"avatar image\"></mtun-avatar>\r\n  </mtun-header>\r\n  <div class=\"container mx-auto p-4\">\r\n    <input UiInput placeholder=\"text here\" />\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "AvatarComponent",
            "id": "component-AvatarComponent-00ab633e35217fbbde610bd74808db173409ff37d9a3ef123c1ceb86c88c62c21e7aa5d5a26a750a1a0d0c2351c9f8a15132f3df3f533eed609a513d7d0678d6",
            "file": "src/ui/components/avatar/avatar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mtun-avatar",
            "styleUrls": [
                "./avatar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./avatar.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "alt",
                    "defaultValue": "'avatar image'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "required": true,
                    "name": "img",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "optional": false,
                    "line": 9,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'mtun-avatar',\n  templateUrl: './avatar.component.html',\n  styleUrls: ['./avatar.component.scss'],\n})\nexport class AvatarComponent {\n  @Input({ required: true }) img: string = '';\n  @Input() alt: string = 'avatar image';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./avatar.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<img class=\"rounded-full w-10 h-10\" [attr.src]=\"img\" [attr.alt]=\"alt\"/>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-d7929566a0a270ab5fc71954b3c3bb07dd4b2570941916ef249c1418b10009f2b2c6ca4e5bc028408685a5d991d197e24a508df58ceb4b6f941198460769809e",
            "file": "src/ui/components/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mtun-button",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "\"primary\" | \"secondary\" | \"danger\"",
                    "decorators": []
                },
                {
                    "name": "isDisabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "isRounded",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'base'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "\"extra-small\" | \"small\" | \"base\" | \"large\" | \"extra-large\"",
                    "decorators": []
                },
                {
                    "name": "style",
                    "defaultValue": "'flat'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "\"basic\" | \"raised\" | \"stroked\" | \"flat\"",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "\"button\" | \"submit\" | \"reset\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'mtun-button',\r\n  templateUrl: './button.component.html',\r\n  styleUrls: ['./button.component.scss'],\r\n})\r\nexport class ButtonComponent {\r\n  @Input()\r\n  color?: 'primary' | 'secondary' | 'danger' = 'primary';\r\n  @Input()\r\n  size?: 'extra-small' | 'small' | 'base' | 'large' | 'extra-large' = 'base';\r\n  @Input()\r\n  style?: 'basic' | 'raised' | 'stroked' | 'flat' = 'flat';\r\n  @Input()\r\n  type?: 'button' | 'submit' | 'reset' = 'button';\r\n  @Input()\r\n  isRounded?: boolean = true;\r\n  @Input()\r\n  isDisabled?: boolean = false;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  button {\r\n    @apply font-normal font-avenir;\r\n\r\n    // TYPES\r\n    &.basic {\r\n      &.primary:not(.disabled) {\r\n        @apply text-primary-500 hover:bg-primary-100/30 focus:ring-1 focus:ring-primary-500;\r\n      }\r\n\r\n      &.secondary:not(.disabled) {\r\n        @apply text-secondary-500 hover:bg-secondary-300/30 focus:ring-1 focus:ring-secondary-500;\r\n      }\r\n\r\n      &.danger:not(.disabled) {\r\n        @apply text-red-500 hover:bg-red-300/30 focus:ring-1 focus:ring-red-500;\r\n      }\r\n\r\n      &.disabled {\r\n        @apply text-slate-400;\r\n      }\r\n    }\r\n\r\n    &.stroked {\r\n      @apply bg-white;\r\n\r\n      &.primary:not(.disabled) {\r\n        @apply text-primary-500 hover:bg-primary-100/30 focus:ring-1 focus:ring-primary-500 border;\r\n      }\r\n\r\n      &.secondary:not(.disabled) {\r\n        @apply text-secondary-500 hover:bg-secondary-300/30 focus:ring-1 focus:ring-secondary-500 border;\r\n      }\r\n\r\n      &.danger:not(.disabled) {\r\n        @apply text-red-500 hover:bg-red-300/30 focus:ring-1 focus:ring-red-500 border;\r\n      }\r\n\r\n      &.disabled {\r\n        @apply text-slate-400 border border-slate-400;\r\n      }\r\n    }\r\n\r\n    &.flat {\r\n      @apply text-white;\r\n\r\n      &.primary:not(.disabled) {\r\n        @apply bg-primary-500 hover:bg-primary-700 focus:ring-2 focus:ring-primary-600;\r\n      }\r\n\r\n      &.secondary:not(.disabled) {\r\n        @apply bg-secondary-500 hover:bg-secondary-700 focus:ring-2 focus:ring-secondary-600;\r\n      }\r\n\r\n      &.danger:not(.disabled) {\r\n        @apply bg-red-500 hover:bg-red-700 focus:ring-2 focus:ring-red-600;\r\n      }\r\n\r\n      &.disabled {\r\n        @apply text-slate-400 bg-secondary-100;\r\n      }\r\n    }\r\n\r\n    &.raised {\r\n      @apply text-white drop-shadow;\r\n\r\n      &.primary:not(.disabled) {\r\n        @apply bg-primary-500 hover:bg-primary-700 focus:ring-2 focus:ring-primary-600;\r\n      }\r\n\r\n      &.secondary:not(.disabled) {\r\n        @apply bg-secondary-500 hover:bg-secondary-700 focus:ring-2 focus:ring-secondary-600;\r\n      }\r\n\r\n      &.danger:not(.disabled) {\r\n        @apply bg-red-500 hover:bg-red-700 focus:ring-2 focus:ring-red-600;\r\n      }\r\n\r\n      &.disabled {\r\n        @apply text-slate-400 bg-secondary-100;\r\n      }\r\n    }\r\n\r\n    // SIZES\r\n    &.extra-small {\r\n      @apply px-2 py-1 text-xs;\r\n    }\r\n\r\n    &.small {\r\n      @apply px-3 py-2 text-sm;\r\n    }\r\n\r\n    &.base {\r\n      @apply px-4 py-2 text-lg;\r\n    }\r\n\r\n    &.large {\r\n      @apply px-4 py-2 text-xl;\r\n    }\r\n\r\n    &.extra-large {\r\n      @apply px-5 py-3 text-2xl;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<button\r\n  [ngClass]=\"[color, size, style]\"\r\n  [class.rounded-md]=\"isRounded\"\r\n  [class.disabled]=\"isDisabled\"\r\n  [disabled]=\"isDisabled\"\r\n  [attr.type]=\"type\">\r\n  <ng-content></ng-content>\r\n</button>\r\n"
        },
        {
            "name": "ClubListComponent",
            "id": "component-ClubListComponent-5b04c011edf19991b20e8404d5dbcb5130a8267f329f2ade47217885c53d51b3914ff2fe1dbe96daa96a38616be9ec50b486906af69b1fe071d9e2ab5bc10740",
            "file": "src/core/features/club/presentation/components/club-list/club-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mtun-club-list",
            "styleUrls": [
                "./club-list.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./club-list.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'mtun-club-list',\n  templateUrl: './club-list.component.html',\n  styleUrls: ['./club-list.component.scss']\n})\nexport class ClubListComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./club-list.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<p>club-list works!</p>\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-3f6a816f68c1635421af93d1f74d88db77e411660d57f6551af549978122f003a0d17c0c15eeab9b8e6f4ecc97e12763c4c16eda0353d805bfcfbed5a52033ed",
            "file": "src/ui/components/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mtun-header",
            "styleUrls": [
                "./header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "logo",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'mtun-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent {\n  @Input() logo: string = '';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\r\n",
                    "styleUrl": "./header.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"bg-white flex justify-between items-center px-4 py-2\">\n  <img class=\"max-h-12\" [attr.src]=\"logo\" alt=\"brand logo image\">\n  <div class=\"action-content\">\n    <ng-content></ng-content>\n  </div>\n</div>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-40f5d6037727f7313fa27c6107a6d1eaf47cb3902441e1152a4425a7fd743444eda5b4f4b2f71533ff49bb4a3c95c8caa1fd97b61591f6d46c00c1cd19039c78",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule, isDevMode } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { ClubModule } from '../core/features/club/presentation/club.module';\r\nimport { ClubEffects } from '../core/features/club/presentation/store/effects';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { UiModule } from '../ui/ui.module';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FontAwesomeModule,\r\n    UiModule,\r\n    StoreModule.forRoot({}, {}),\r\n    StoreDevtoolsModule.instrument({ maxAge: 25, logOnly: !isDevMode() }),\r\n    EffectsModule.forRoot([ClubEffects]),\r\n    ClubModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "ClubModule"
                        },
                        {
                            "name": "UiModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-c4719ce15de90c4b4c83a83b31f183bef375324425a58f453a5ef3509194b8e568a2ac14ec160ff7d77b541a341a9694f7477e55a0133be0dbcf0cf4adbe4279",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: 'club',\n    loadChildren: () =>\n      \"import('../core/features/club/presentation/club.module').then(\\\n        (m) => m.ClubModule\\\n      )\",\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ClubModule",
            "id": "module-ClubModule-3561b1fbc70680f3371f99991fdc5d38f18043b746f5278d9ea830cea1664f6c35035313e21ff67dd23c84892f246a9032a74c6a5c350621032dcd5a1bc399d7",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/core/features/club/presentation/club.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StoreModule } from '@ngrx/store';\nimport { clubFeature } from './store/reducer';\nimport { ClubRepository } from '../domain/repositories/club.repository';\nimport { GetAllClubsUseCase } from '../domain/usecases/get-all-clubs.usecase';\nimport { ClubInMemoryImplRepository } from '../data/repositories/club-in-memory-impl.repository';\nimport { ClubRoutingModule } from './club-routing.module';\nimport { ClubListComponent } from './components/club-list/club-list.component';\n\nconst getUserProfileUseCaseFactory = (clubRepo: ClubRepository) =>\n  new GetAllClubsUseCase(clubRepo);\n\nexport const fetchClubsUseCaseProvider = {\n  provide: GetAllClubsUseCase,\n  useFactory: getUserProfileUseCaseFactory,\n  deps: [ClubRepository],\n};\n\n@NgModule({\n  declarations: [\n    ClubListComponent\n  ],\n  providers: [\n    fetchClubsUseCaseProvider,\n    { provide: ClubRepository, useClass: ClubInMemoryImplRepository },\n  ],\n  imports: [\n    CommonModule,\n    ClubRoutingModule,\n    StoreModule.forFeature('club', clubFeature),\n  ],\n})\nexport class ClubModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ClubListComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ClubRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ClubRoutingModule",
            "id": "module-ClubRoutingModule-1de0ad713c4702df15c43cb1330848ac866be9794c39578749cac1c477b00f1c7727a2f37d60411c134830d9bfceeadd28111f53b8da63adfdb9d0ebe935b00a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/core/features/club/presentation/club-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ClubListComponent } from './components/club-list/club-list.component';\n\nconst routes: Routes = [{ path: 'list', component: ClubListComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ClubRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FontawesomeModule",
            "id": "module-FontawesomeModule-911a240bacd22f361baf18d0fe227870273d463921f1be67750fbf6128c8fc0b76dbb634e546024c42032e052134d353d4d420666a32b5ddb3e05b91fdee1e99",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/ui/fontawesome.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport {\r\n  FontAwesomeModule,\r\n  FaIconLibrary,\r\n} from '@fortawesome/angular-fontawesome';\r\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [BrowserModule, FontAwesomeModule],\r\n})\r\nexport class FontawesomeModule {\r\n  constructor(library: FaIconLibrary) {\r\n    // Add an icon to the library for convenient access in other components\r\n    library.addIcons(faCoffee);\r\n  }\r\n}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UiModule",
            "id": "module-UiModule-c768260902dea75cdcd1e9d597f7a8c81e835fac4a8e4a198235ebbea7142d899f6b083fd57ad780948db9c960b865df3ec2da925c0ec612d56e89756f6b23f8",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/ui/ui.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule, NgOptimizedImage } from '@angular/common';\nimport { FontawesomeModule } from './fontawesome.module';\nimport { ButtonComponent } from './components/button/button.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { AvatarComponent } from './components/avatar/avatar.component';\nimport { InputDirective } from './components/input/input.directive';\n\n@NgModule({\n  declarations: [\n    ButtonComponent,\n    HeaderComponent,\n    AvatarComponent,\n    InputDirective,\n  ],\n  imports: [CommonModule, FontawesomeModule, NgOptimizedImage],\n  exports: [ButtonComponent, HeaderComponent, AvatarComponent, InputDirective],\n})\nexport class UiModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AvatarComponent"
                        },
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "HeaderComponent"
                        },
                        {
                            "name": "InputDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "FontawesomeModule"
                        },
                        {
                            "name": "NgOptimizedImage"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AvatarComponent"
                        },
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "HeaderComponent"
                        },
                        {
                            "name": "InputDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/ui/components/avatar/avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    img: faker.image.avatar(),\n  },\n}"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/ui/components/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "clubFeature",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/core/features/club/presentation/store/reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\r\n  initialClubState,\r\n  on(\r\n    fromActions.fetchClubs,\r\n    (state) => ({ ...state, isLoading: true, isLoaded: false })\r\n  ),\r\n  on(\r\n    fromActions.fetchClubsSuccess,\r\n    (state, { clubs }) => ({ ...state, clubs, isLoading: false, isLoaded: true })\r\n  ),\r\n  on(\r\n    fromActions.fetchClubsFailed,\r\n    (state, { errors }) => ({ ...state, errors, isLoading: false, isLoaded: false })\r\n  ),\r\n)"
            },
            {
                "name": "CLUBS_MOCK",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/core/features/club/data/mocks/CLUBS_MOCK.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ClubModel[]",
                "defaultValue": "[\n  { id: '1', name: 'club 1' },\n  { id: '2', name: 'club 2' },\n  { id: '3', name: 'club 3' },\n]"
            },
            {
                "name": "fetchClubs",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/core/features/club/presentation/store/actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  '[club] Fetch Club List'\r\n)"
            },
            {
                "name": "fetchClubsFailed",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/core/features/club/presentation/store/actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  '[club] Fetch Club List Failed',\r\n  props<{ errors: any }>()\r\n)"
            },
            {
                "name": "fetchClubsSuccess",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/core/features/club/presentation/store/actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  '[club] Fetch Club List Success',\r\n  props<{ clubs: ClubModel[] }>()\r\n)"
            },
            {
                "name": "fetchClubsUseCaseProvider",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/core/features/club/presentation/club.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  provide: GetAllClubsUseCase,\n  useFactory: getUserProfileUseCaseFactory,\n  deps: [ClubRepository],\n}"
            },
            {
                "name": "getClubList",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/core/features/club/presentation/store/selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  selectFeature,\r\n  (state: ClubState) => state.clubs\r\n)"
            },
            {
                "name": "getUserProfileUseCaseFactory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/core/features/club/presentation/club.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(clubRepo: ClubRepository) =>\n  new GetAllClubsUseCase(clubRepo)"
            },
            {
                "name": "initialClubState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/core/features/club/presentation/store/reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ClubState",
                "defaultValue": "{\r\n  clubs: [],\r\n  isLoading: false,\r\n  isLoaded: false,\r\n  errors: null,\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/ui/components/avatar/avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AvatarComponent>",
                "defaultValue": "{\n  title: 'Ui/Avatar',\n  component: AvatarComponent,\n  tags: ['autodocs'],\n  render: (args: AvatarComponent) => ({\n    props: {\n      ...args,\n    },\n  }),\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/ui/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ButtonComponent>",
                "defaultValue": "{\r\n  title: 'Ui/Button',\r\n  component: ButtonComponent,\r\n  tags: ['autodocs'],\r\n  render: (args: ButtonComponent) => ({\r\n    props: {\r\n      color: 'primary',\r\n      content: 'test button',\r\n      size: 'base',\r\n      style: 'flat',\r\n      isRounded: true,\r\n      isDisabled: false,\r\n      type: 'button',\r\n      ...args,\r\n    },\r\n    template: `<mtun-button\r\n        [color]=\"color\"\r\n        [size]=\"size\"\r\n        [style]=\"style\"\r\n        [isRounded]=\"isRounded\"\r\n        [isDisabled]=\"isDisabled\"\r\n        [type]=\"type\">\r\n        Button\r\n      </mtun-button>`,\r\n  }),\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/ui/components/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<InputDirective>",
                "defaultValue": "{\n  title: 'Ui/Input',\n  component: InputDirective,\n  tags: ['autodocs'],\n  render: (args: InputDirective) => ({\n    props: {\n      ...args,\n    },\n    moduleMetadata: {\n      declarations: [InputDirective],\n    },\n    template: `<input UiInput placeholder=\"text here !\" [fieldSize]=\"fieldSize\" />`,\n  }),\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": ".storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\r\n  parameters: {\r\n    actions: { argTypesRegex: '^on[A-Z].*' },\r\n    controls: {\r\n      matchers: {\r\n        color: /(background|color)$/i,\r\n        date: /Date$/,\r\n      },\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/ui/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    color: 'primary',\r\n  },\r\n}"
            },
            {
                "name": "selectFeature",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/core/features/club/presentation/store/selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(state: AppState) => state.club"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<AvatarComponent>",
                "file": "src/ui/components/avatar/avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ButtonComponent>",
                "file": "src/ui/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<InputDirective>",
                "file": "src/ui/components/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "UiComponentShape",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"rectangle\" | \"semi-round\" | \"round\"",
                "file": "src/ui/components/types/component-shape.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "UiComponentSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"tiny\" | \"small\" | \"medium\" | \"large\" | \"giant\"",
                "file": "src/ui/components/types/component-size.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            },
            {
                "name": "UiComponentStatus",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"basic\" | \"primary\" | \"success\" | \"warning\" | \"danger\" | \"info\" | \"control\"",
                "file": "src/ui/components/types/component-status.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 189
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/ui/components/avatar/avatar.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/ui/components/avatar/avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    img: faker.image.avatar(),\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/ui/components/avatar/avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AvatarComponent>",
                    "defaultValue": "{\n  title: 'Ui/Avatar',\n  component: AvatarComponent,\n  tags: ['autodocs'],\n  render: (args: AvatarComponent) => ({\n    props: {\n      ...args,\n    },\n  }),\n}"
                }
            ],
            "src/ui/components/input/input.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/ui/components/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/ui/components/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<InputDirective>",
                    "defaultValue": "{\n  title: 'Ui/Input',\n  component: InputDirective,\n  tags: ['autodocs'],\n  render: (args: InputDirective) => ({\n    props: {\n      ...args,\n    },\n    moduleMetadata: {\n      declarations: [InputDirective],\n    },\n    template: `<input UiInput placeholder=\"text here !\" [fieldSize]=\"fieldSize\" />`,\n  }),\n}"
                }
            ],
            "src/core/features/club/presentation/store/reducer.ts": [
                {
                    "name": "clubFeature",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/core/features/club/presentation/store/reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\r\n  initialClubState,\r\n  on(\r\n    fromActions.fetchClubs,\r\n    (state) => ({ ...state, isLoading: true, isLoaded: false })\r\n  ),\r\n  on(\r\n    fromActions.fetchClubsSuccess,\r\n    (state, { clubs }) => ({ ...state, clubs, isLoading: false, isLoaded: true })\r\n  ),\r\n  on(\r\n    fromActions.fetchClubsFailed,\r\n    (state, { errors }) => ({ ...state, errors, isLoading: false, isLoaded: false })\r\n  ),\r\n)"
                },
                {
                    "name": "initialClubState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/core/features/club/presentation/store/reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ClubState",
                    "defaultValue": "{\r\n  clubs: [],\r\n  isLoading: false,\r\n  isLoaded: false,\r\n  errors: null,\r\n}"
                }
            ],
            "src/core/features/club/data/mocks/CLUBS_MOCK.ts": [
                {
                    "name": "CLUBS_MOCK",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/core/features/club/data/mocks/CLUBS_MOCK.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ClubModel[]",
                    "defaultValue": "[\n  { id: '1', name: 'club 1' },\n  { id: '2', name: 'club 2' },\n  { id: '3', name: 'club 3' },\n]"
                }
            ],
            "src/core/features/club/presentation/store/actions.ts": [
                {
                    "name": "fetchClubs",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/core/features/club/presentation/store/actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  '[club] Fetch Club List'\r\n)"
                },
                {
                    "name": "fetchClubsFailed",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/core/features/club/presentation/store/actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  '[club] Fetch Club List Failed',\r\n  props<{ errors: any }>()\r\n)"
                },
                {
                    "name": "fetchClubsSuccess",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/core/features/club/presentation/store/actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  '[club] Fetch Club List Success',\r\n  props<{ clubs: ClubModel[] }>()\r\n)"
                }
            ],
            "src/core/features/club/presentation/club.module.ts": [
                {
                    "name": "fetchClubsUseCaseProvider",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/core/features/club/presentation/club.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  provide: GetAllClubsUseCase,\n  useFactory: getUserProfileUseCaseFactory,\n  deps: [ClubRepository],\n}"
                },
                {
                    "name": "getUserProfileUseCaseFactory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/core/features/club/presentation/club.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(clubRepo: ClubRepository) =>\n  new GetAllClubsUseCase(clubRepo)"
                }
            ],
            "src/core/features/club/presentation/store/selectors.ts": [
                {
                    "name": "getClubList",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/core/features/club/presentation/store/selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  selectFeature,\r\n  (state: ClubState) => state.clubs\r\n)"
                },
                {
                    "name": "selectFeature",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/core/features/club/presentation/store/selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(state: AppState) => state.club"
                }
            ],
            "src/ui/components/button/button.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/ui/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ButtonComponent>",
                    "defaultValue": "{\r\n  title: 'Ui/Button',\r\n  component: ButtonComponent,\r\n  tags: ['autodocs'],\r\n  render: (args: ButtonComponent) => ({\r\n    props: {\r\n      color: 'primary',\r\n      content: 'test button',\r\n      size: 'base',\r\n      style: 'flat',\r\n      isRounded: true,\r\n      isDisabled: false,\r\n      type: 'button',\r\n      ...args,\r\n    },\r\n    template: `<mtun-button\r\n        [color]=\"color\"\r\n        [size]=\"size\"\r\n        [style]=\"style\"\r\n        [isRounded]=\"isRounded\"\r\n        [isDisabled]=\"isDisabled\"\r\n        [type]=\"type\">\r\n        Button\r\n      </mtun-button>`,\r\n  }),\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/ui/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    color: 'primary',\r\n  },\r\n}"
                }
            ],
            ".storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": ".storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\r\n  parameters: {\r\n    actions: { argTypesRegex: '^on[A-Z].*' },\r\n    controls: {\r\n      matchers: {\r\n        color: /(background|color)$/i,\r\n        date: /Date$/,\r\n      },\r\n    },\r\n  },\r\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/ui/components/avatar/avatar.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<AvatarComponent>",
                    "file": "src/ui/components/avatar/avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/ui/components/button/button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ButtonComponent>",
                    "file": "src/ui/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/ui/components/input/input.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<InputDirective>",
                    "file": "src/ui/components/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/ui/components/types/component-shape.type.ts": [
                {
                    "name": "UiComponentShape",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"rectangle\" | \"semi-round\" | \"round\"",
                    "file": "src/ui/components/types/component-shape.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                }
            ],
            "src/ui/components/types/component-size.type.ts": [
                {
                    "name": "UiComponentSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"tiny\" | \"small\" | \"medium\" | \"large\" | \"giant\"",
                    "file": "src/ui/components/types/component-size.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                }
            ],
            "src/ui/components/types/component-status.type.ts": [
                {
                    "name": "UiComponentStatus",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"basic\" | \"primary\" | \"success\" | \"warning\" | \"danger\" | \"info\" | \"control\"",
                    "file": "src/ui/components/types/component-status.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 189
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "club",
                        "loadChildren": "../core/features/club/presentation/club.module#ClubModule"
                    }
                ],
                "kind": "module"
            },
            {
                "name": "routes",
                "filename": "src/core/features/club/presentation/club-routing.module.ts",
                "module": "ClubRoutingModule",
                "children": [
                    {
                        "path": "list",
                        "component": "ClubListComponent"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": ".storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/core/features/club/data/mocks/CLUBS_MOCK.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CLUBS_MOCK",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/core/features/club/data/repositories/club-in-memory-impl.repository.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ClubInMemoryImplRepository",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/core/features/club/data/repositories/club.entity.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ClubEntity",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/core/features/club/domain/models/club.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ClubModel",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/core/features/club/domain/repositories/club.repository.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ClubRepository",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/core/features/club/domain/usecases/get-all-clubs.usecase.ts",
                "type": "class",
                "linktype": "classe",
                "name": "GetAllClubsUseCase",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/core/features/club/presentation/club.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "fetchClubsUseCaseProvider",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/core/features/club/presentation/club.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getUserProfileUseCaseFactory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/core/features/club/presentation/components/club-list/club-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ClubListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/core/features/club/presentation/store/actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "fetchClubs",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/core/features/club/presentation/store/actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "fetchClubsFailed",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/core/features/club/presentation/store/actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "fetchClubsSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/core/features/club/presentation/store/effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ClubEffects",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/core/features/club/presentation/store/reducer.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ClubState",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/core/features/club/presentation/store/reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "clubFeature",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/core/features/club/presentation/store/reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialClubState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/core/features/club/presentation/store/selectors.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AppState",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/core/features/club/presentation/store/selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getClubList",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/core/features/club/presentation/store/selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectFeature",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/core/utils/mapper.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Mapper",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/core/utils/use-case.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UseCase",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/ui/components/avatar/avatar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AvatarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/ui/components/avatar/avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/ui/components/avatar/avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/ui/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/ui/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/ui/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/ui/components/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/ui/components/input/input.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "InputDirective",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/ui/components/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/ui/components/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}